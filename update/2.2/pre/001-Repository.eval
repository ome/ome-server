# Upgrade Repository semantic type

print "     \\_ Repository ";

# Load in the existing Repository ST, and its database table

my $st = $factory->
  findObject("OME::SemanticType",name => 'Repository');
die "Could not find Repository semantic type"
  unless defined $st;

my $dt = $factory->
  findObject("OME::DataTable",table_name => 'REPOSITORIES');
die "Could not find REPOSITORIES table"
  unless defined $dt;

my ($se,$dc);

# Create the IsLocal element

$dc = $factory->findObject("OME::DataTable::Column",
                           data_table => $dt,
                           column_name => 'IS_LOCAL');
unless (defined $dc) {
    $dc = $factory->
      newObject("OME::DataTable::Column",
                {
                 data_table  => $dt,
                 column_name => 'IS_LOCAL',
                 sql_type    => 'boolean',
                });
    die "Could not create IS_LOCAL column"
      unless defined $dc;
}

$se = $factory->findObject("OME::SemanticType::Element",
                           semantic_type => $st,
                           name => 'IsLocal');
unless (defined $se) {
    $se = $factory->
      newObject("OME::SemanticType::Element",
                {
                 semantic_type => $st,
                 name          => 'IsLocal',
                 data_column   => $dc,
                });
    die "Could not create IsLocal element"
      unless defined $se;
}

# Create the ImageServerURL element

$dc = $factory->findObject("OME::DataTable::Column",
                           data_table => $dt,
                           column_name => 'IMAGE_SERVER_URL');
unless (defined $dc) {
    $dc = $factory->
      newObject("OME::DataTable::Column",
                {
                 data_table  => $dt,
                 column_name => 'IMAGE_SERVER_URL',
                 sql_type    => 'string',
                });
    die "Could not create IMAGE_SERVER_URL column"
      unless defined $dc;
}

$se = $factory->findObject("OME::SemanticType::Element",
                           semantic_type => $st,
                           name => 'ImageServerURL');
unless (defined $se) {
    $se = $factory->
      newObject("OME::SemanticType::Element",
                {
                 semantic_type => $st,
                 name          => 'ImageServerURL',
                 data_column   => $dc,
                });
    die "Could not create ImageServerURL element"
      unless defined $se;
}

# Force this ST to recreate its DBObject subclass.  (This ensures that
# the new elements are accessible by the remaining Perl code.)

$st->requireAttributeTypePackage(1);

# Have the databse delegate add the new columns to the database tables.

$delegate->addClassToDatabase($dbh,$dt->getDataTablePackage());

# Signal success

print BOLD, "[SUCCESS]", RESET, ".\n";
1;
