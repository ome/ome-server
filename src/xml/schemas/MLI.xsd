<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
	 targetNamespace = "http://www.openmicroscopy.org/XMLschemas/MLI/IR2/MLI.xsd"
	 xmlns:MLI = "http://www.openmicroscopy.org/XMLschemas/MLI/IR2/MLI.xsd"
	 version = "IR1"
	 elementFormDefault = "qualified">
	<import namespace = "http://www.w3.org/XML/1998/namespace"/>
	<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# Copyright (C) 2003 Open Microscopy Environment
#       Massachusetts Institute of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
	<!--
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Written by:  Josiah Johnston <siah@nih.gov>
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-->
	<element name = "ExecutionInstructions">
		<annotation>
			<documentation>Specifies the Instructions for a given module that are specific to the Matlab Handler.	
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "MLI:FunctionInputs"/>
				<element ref = "MLI:FunctionOutputs"/>
				<element ref = "MLI:Templates" minOccurs = "0"/>
			</sequence>
			<attribute name = "ExecutionGranularity" use = "required">
				<annotation>
					<documentation>Assigns a execution point for the analysis. Refer to the Analysis Engine for more Info. Alternately, plague ome-devel with requests for more documentation.</documentation>
				</annotation>
				<simpleType>
					<restriction base = "string">
						<enumeration value = "G"/>
						<enumeration value = "D"/>
						<enumeration value = "I"/>
						<enumeration value = "F"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>
	<element name = "FunctionInputs">
		<annotation>
			<documentation>Specifies the function's parameter order.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "MLI:Input" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "FunctionOutputs">
		<annotation>
			<documentation>Specifies the function's order of outputs</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "MLI:Output" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "Input">
		<complexType>
			<choice>
				<element name = "PixelsArray">
					<complexType>
						<attribute name = "FormalInput" use = "required" type = "string"/>
						<attribute name = "ID" type = "ID"/>
					</complexType>
				</element>
				<element name = "PixelsSlice">
					<annotation>
						<documentation>Present a Pixels numeric Array to the Function. The FormalInput should be a PixelsSlice ST or something that has implementn psuedo polymorphism of the PixelsSlice ST.</documentation>
					</annotation>
					<complexType>
						<attribute name = "FormalInput" use = "required" type = "string"/>
						<attribute name = "ID" type = "ID"/>
					</complexType>
				</element>
				<element name = "Scalar">
					<complexType>
						<attribute name = "InputLocation" use = "required" type = "string"/>
					</complexType>
				</element>
			</choice>
		</complexType>
	</element>
	<element name = "Output">
		<complexType>
			<choice>
				<element name = "PixelsArray">
					<complexType>
						<attribute name = "FormalOutput" use = "required" type = "string"/>
						<attribute name = "ID" type = "ID"/>
					</complexType>
				</element>
				<element name = "Scalar">
					<complexType>
						<attribute name = "OutputLocation" use = "required" type = "string"/>
						<attribute name = "UseTemplate" type = "string"/>
					</complexType>
				</element>
				<element name = "Struct">
					<annotation>
						<documentation>Struct outputs are expected to have the same structure and field names as the STs of their formal outputs. We do not anticipate this to be a widely used feature.</documentation>
					</annotation>
					<complexType>
						<attribute name = "FormalOutput" use = "required" type = "string"/>
						<attribute name = "ID" type = "ID"/>
					</complexType>
				</element>
			</choice>
		</complexType>
	</element>
	<element name = "Templates">
		<annotation>
			<documentation>Used to add structure &amp; explicit data description to matlab outputs such as ChannelComponents or LogicalChannels.
The contents of this element should follow CustomAttribute conventions.
Scalar Outputs are to be used in conjuction with these.
			</documentation>
		</annotation>
	</element>
</schema>
