<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by Turbo XML 2.3.1.100. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<schema xmlns = "http://www.w3.org/2001/XMLSchema"
	 targetNamespace = "http://www.openmicroscopy.org/XMLschemas/CLI/RC1/CLI.xsd"
	 xmlns:CLI = "http://www.openmicroscopy.org/XMLschemas/CLI/RC1/CLI.xsd"
	 xmlns:AML = "http://www.openmicroscopy.org/XMLschemas/AnalysisModule/RC1/AnalysisModule.xsd"
	 version = "RC1"
	 elementFormDefault = "qualified">
	<import namespace = "http://www.openmicroscopy.org/XMLschemas/AnalysisModule/RC1/AnalysisModule.xsd" schemaLocation = "http://www.openmicroscopy.org/XMLschemas/AnalysisModule/RC1/AnalysisModule.xsd"/>
	<import namespace = "http://www.w3.org/XML/1998/namespace"/>
	<group name = "inputRecordModel">
		<choice>
			<element ref = "CLI:Input"/>
			<element ref = "CLI:XYPlane"/>
			<element ref = "CLI:RawImageFile"/>
			<element ref = "CLI:RawImageFilePath"/>
			<element ref = "CLI:sizeT"/>
			<element ref = "CLI:sizeW"/>
			<element ref = "CLI:sizeX"/>
			<element ref = "CLI:sizeY"/>
			<element ref = "CLI:sizeZ"/>
			<element ref = "CLI:BitsPerPixel"/>
			<element ref = "CLI:BytesPerPixel"/>
			<element ref = "CLI:RawText"/>
		</choice>
	</group>
	<attributeGroup name = "InputLocation">
		<attribute ref = "AML:FormalInputName"/>
		<attribute name = "SemanticElementName" use = "required">
			<annotation>
				<documentation>References a semantic element (ATTRIBUTE_COLUMN in DB lingo).</documentation>
			</annotation>
			<simpleType>
				<restriction base = "string">
					<maxLength value = "64"/>
				</restriction>
			</simpleType>
		</attribute>
	</attributeGroup>
	<attributeGroup name = "OutputLocation">
		<attribute ref = "AML:FormalOutputName"/>
		<attribute name = "SemanticElementName" use = "required">
			<annotation>
				<documentation>References a semantic element (ATTRIBUTE_COLUMN in DB lingo).</documentation>
			</annotation>
			<simpleType>
				<restriction base = "string">
					<maxLength value = "64"/>
				</restriction>
			</simpleType>
		</attribute>
	</attributeGroup>
	<element name = "ExecutionInstructions">
		<annotation>
			<documentation>Tied to DB. Table PROGRAMS Column EXECUTION
			
			
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:CommandLine" minOccurs = "0"/>
				<element ref = "CLI:STDIN" minOccurs = "0"/>
				<element ref = "CLI:STDOUT" minOccurs = "0"/>
			</sequence>
			<attribute name = "ExecutionPoint" use = "required">
				<annotation>
					<documentation>Assigns a execution point for the analysis.
					
					
					</documentation>
				</annotation>
				<simpleType>
					<restriction base = "string">
						<enumeration value = "precalculateDataset"/>
						<enumeration value = "precalculateImage"/>
						<enumeration value = "calculateFeature"/>
						<enumeration value = "postcalculateImage"/>
						<enumeration value = "postcalculateDataset"/>
					</restriction>
				</simpleType>
			</attribute>
			<attribute name = "MakesNewFeature" default = "false" type = "boolean"/>
		</complexType>
	</element>
	<element name = "CommandLine">
		<annotation>
			<documentation>This describes the string that will be passed to a command line program via command line parameters. The command line handler will perform basic variable substitution on sub elements of this.
Example:
when you use the program, you type: /OME/bin/OME_Image_XYZ_stats Path=[path to repository file] Dims=[X],[Y],[Z],[W],[T],[BytesPerPix]
XML specification of the command line parameters is:
&lt;CommandLine>Path=&lt;RawImageFilePath/> Dims=&lt;sizeX/>,&lt;sizeY/>,&lt;sizeZ/>,&lt;sizeW/>,&lt;sizeT/>,&lt;BPP/>&lt;/CommandLine>
			
			
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:InputSubString" minOccurs = "0" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
		<unique name = "CommandLine_XYPlaneID">
			<selector xpath = ".//CLI:XYPlane"/>
			<field xpath = "@XYPlaneID"/>
		</unique>
		<keyref name = "CommandLine_XYPlaneID_Ref" refer = "CLI:CommandLine_XYPlaneID">
			<selector xpath = ".//CLI:Match"/>
			<field xpath = "@XYPlaneID"/>
		</keyref>
	</element>
	<element name = "STDIN">
		<annotation>
			<documentation>This specifies what and how to write to STDIN.
			
			
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:InputRecord" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "STDOUT">
		<annotation>
			<documentation>This specifies what and how to read STDOUT.
			
			
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:OutputRecord" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "Input">
		<annotation>
			<documentation>References a particular column in a FormalInput. Used for variable substitution.</documentation>
		</annotation>
		<complexType>
			<attributeGroup ref = "CLI:InputLocation"/>
		</complexType>
	</element>
	<element name = "Output">
		<annotation>
			<documentation>References a particular column of a FormalOutput.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:OutputTo" maxOccurs = "unbounded"/>
			</sequence>
			<attribute name = "AccessBy" use = "required" type = "integer">
				<annotation>
					<documentation>Describes how to access information extracted using a regular expression. Examples are 1, 2, 3, ...</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "theZ">
		<annotation>
			<documentation>Describes how the Z constraints of the XY plane should be produced or acquired.</documentation>
		</annotation>
		<complexType>
			<choice>
				<element ref = "CLI:AutoIterate"/>
				<element ref = "CLI:UseValue"/>
				<element ref = "CLI:IterateRange"/>
				<element ref = "CLI:Match"/>
			</choice>
		</complexType>
	</element>
	<element name = "theW">
		<annotation>
			<documentation>Describes how the wavenumber constraints of the XY plane should be produced or acquired.</documentation>
		</annotation>
		<complexType>
			<choice>
				<element ref = "CLI:AutoIterate"/>
				<element ref = "CLI:UseValue"/>
				<element ref = "CLI:IterateRange"/>
				<element ref = "CLI:Match"/>
			</choice>
		</complexType>
	</element>
	<element name = "theT">
		<annotation>
			<documentation>Describes how the time constraints of the XY plane should be produced or acquired.</documentation>
		</annotation>
		<complexType>
			<choice>
				<element ref = "CLI:AutoIterate"/>
				<element ref = "CLI:UseValue"/>
				<element ref = "CLI:IterateRange"/>
				<element ref = "CLI:Match"/>
			</choice>
		</complexType>
	</element>
	<element name = "XYPlane">
		<annotation>
			<documentation>Describes an XY plane. Used with variable substitution. This will be substituted with a dynamically generated plane.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:theZ"/>
				<element ref = "CLI:theT"/>
				<element ref = "CLI:theW"/>
			</sequence>
			<attribute name = "BPP">
				<annotation>
					<documentation>Specifies bits per pixel (BPP) the module is expecting. If the program can deal with either 8 or 16 bit images, leave this out or specify 16. Both of these result in the BPP of the image being used. That is, if the image is 8 bits, the module will get an 8 bits per pixel. If the image is 16 bits, the module will get 16 bits per pixel.

Currently, only native image pixels are supported.
					
					</documentation>
				</annotation>
				<simpleType>
					<restriction base = "integer">
						<enumeration value = "8"/>
						<enumeration value = "16"/>
					</restriction>
				</simpleType>
			</attribute>
			<attribute name = "Format">
				<annotation>
					<documentation>Specifies the expected format of the plane.
RAW corrosponds to OME repository format of pixel dump.
TIFF corrosponds to TIFF files.

Currently only TIFF is supported.
					
					</documentation>
				</annotation>
				<simpleType>
					<restriction base = "string">
						<enumeration value = "RAW"/>
						<enumeration value = "TIFF"/>
					</restriction>
				</simpleType>
			</attribute>
			<attribute name = "XYPlaneID" type = "string">
				<annotation>
					<documentation>Needed if you need another plane to match indexes. Referenced by the Match element.</documentation>
				</annotation>
			</attribute>
			<attribute name = "Return">
				<annotation>
					<documentation>Specifies whether to the program needs the FilePath or the FileContents. Currently, only the FilePath is supported.</documentation>
				</annotation>
				<simpleType>
					<restriction base = "string">
						<enumeration value = "FilePath"/>
						<enumeration value = "File"/>
					</restriction>
				</simpleType>
			</attribute>
		</complexType>
	</element>
	<element name = "sizeX">
		<annotation>
			<documentation>Used with variable substitution. This is substituted for the X dimension of the image. Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "sizeY">
		<annotation>
			<documentation>Used with variable substitution. This is substituted for the Y dimension of the image. Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "sizeZ">
		<annotation>
			<documentation>Used with variable substitution. This is substituted for the Z dimension of the image. Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "sizeT">
		<annotation>
			<documentation>Used with variable substitution. This is substituted for the T dimension of the image. Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "sizeW">
		<annotation>
			<documentation>Used with variable substitution. This is substituted for the W dimension of the image. Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "RawImageFilePath">
		<annotation>
			<documentation>Used with variable substitution. This will be substituted with the path and file of the raw pixel dump image file.
e.g. /OME/repository/1-tinyTest.ori
			
			
			</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "RawImageFile">
		<annotation>
			<documentation>Used with variable substitution. This will be substituted with the binary contents of the repository file.

Not yet supported.
			
			
			</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "InputRecord">
		<annotation>
			<documentation>Groups a set of inputs into records.</documentation>
		</annotation>
		<complexType mixed = "true">
			<choice>
				<element ref = "CLI:InputSubString" minOccurs = "0" maxOccurs = "unbounded"/>
			</choice>
			<attribute name = "RepeatCount" type = "positiveInteger">
				<annotation>
					<documentation>RepeatCount specifies how many times to write a record. If it is not specified, writing will continue until it runs out of things to write.
					
					
					</documentation>
				</annotation>
			</attribute>
		</complexType>
		<unique name = "InputRecord_XYPlaneID">
			<selector xpath = ".//CLI:XYPlane"/>
			<field xpath = "@XYPlaneID"/>
		</unique>
		<keyref name = "InputRecord_XYPlaneID_Ref" refer = "CLI:InputRecord_XYPlaneID">
			<selector xpath = ".//CLI:Match"/>
			<field xpath = "@XYPlaneID"/>
		</keyref>
	</element>
	<element name = "OutputRecord">
		<annotation>
			<documentation>Groups a set of outputs into records.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:pat"/>
				<element ref = "CLI:Output" minOccurs = "0" maxOccurs = "unbounded"/>
			</sequence>
			<attribute name = "RepeatCount" type = "positiveInteger">
				<annotation>
					<documentation>RepeatCount specifies how many times to read a record. If it is not specified, reading will continue until it reaches the end of the output stream.
If used in conjuction with TerminateAt, reading will stop after RepeatCount or TerminateAt, whichever comes first.
					
					
					</documentation>
				</annotation>
			</attribute>
			<attribute name = "TerminateAt" type = "string">
				<annotation>
					<documentation>TerminateAt specifies a regular expression. When a match to this is found, reading will stop.
If used in conjuction with RepeatCount, reading will stop after RepeatCount or TerminateAt, whichever comes first.
					
					
					</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "BitsPerPixel">
		<annotation>
			<documentation>Used for variable substitution. This is substituted for bits per pixel.  Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "pat" type = "string">
		<annotation>
			<documentation>Contains a regular expression. Checked for compilation when the module is imported.</documentation>
		</annotation>
	</element>
	<element name = "BytesPerPixel">
		<annotation>
			<documentation>Used for variable substitution. This is substituted for bytes per pixel. Used in the context of per image processing.</documentation>
		</annotation>
		<complexType/>
	</element>
	<element name = "Match">
		<annotation>
			<documentation>Used to reference the index method used by another XYplane. Effectively syncs the planes on certain dimensions. Use with caution. Unsynced dimensions need to be compatible.</documentation>
		</annotation>
		<complexType>
			<attribute name = "XYPlaneID" use = "required" type = "string">
				<annotation>
					<documentation>References another Plane.</documentation>
				</annotation>
			</attribute>
		</complexType>
	</element>
	<element name = "UseValue">
		<annotation>
			<documentation>Use an input value. References an input, does not produce an output.</documentation>
		</annotation>
		<complexType>
			<attributeGroup ref = "CLI:InputLocation"/>
		</complexType>
	</element>
	<element name = "AutoIterate">
		<annotation>
			<documentation>Iterates a dimension over its entire range. Produces outputs.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:OutputTo" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "IterateRange">
		<annotation>
			<documentation>Iterate this dimension over a range of values. Produces outputs.</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element ref = "CLI:Start"/>
				<element ref = "CLI:End"/>
				<element ref = "CLI:OutputTo" maxOccurs = "unbounded"/>
			</sequence>
		</complexType>
	</element>
	<element name = "End">
		<annotation>
			<documentation>Specifies an end point of iteration.

Not currently supported.
			
			
			</documentation>
		</annotation>
		<complexType>
			<attributeGroup ref = "CLI:InputLocation"/>
		</complexType>
	</element>
	<element name = "Start">
		<annotation>
			<documentation>Specifies a starting point of iteration. 

Not currently supported.
			
			
			</documentation>
		</annotation>
		<complexType>
			<attributeGroup ref = "CLI:InputLocation"/>
		</complexType>
	</element>
	<element name = "OutputTo">
		<annotation>
			<documentation>Specifies location to write output. One data chunk that the Output element references may be written to one or more places.</documentation>
		</annotation>
		<complexType>
			<attributeGroup ref = "CLI:OutputLocation"/>
		</complexType>
	</element>
	<element name = "RawText" type = "string"/>
	<element name = "InputSubString">
		<complexType>
			<choice>
				<element ref = "CLI:Input"/>
				<element ref = "CLI:XYPlane"/>
				<element ref = "CLI:RawImageFile"/>
				<element ref = "CLI:RawImageFilePath"/>
				<element ref = "CLI:sizeT"/>
				<element ref = "CLI:sizeW"/>
				<element ref = "CLI:sizeX"/>
				<element ref = "CLI:sizeY"/>
				<element ref = "CLI:sizeZ"/>
				<element ref = "CLI:BitsPerPixel"/>
				<element ref = "CLI:BytesPerPixel"/>
				<element ref = "CLI:RawText"/>
			</choice>
		</complexType>
	</element>
</schema>
