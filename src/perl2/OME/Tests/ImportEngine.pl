#!/usr/bin/perl -w

use OME::SessionManager;
use OME::Session;
use OME::Factory;
use OME::ImportEngine::ImportEngine;
use OME::Analysis::Engine;

use OME::LocalFile;
use OME::Image::Server::File;
use OME::Tasks::PixelsManager;

use Getopt::Long;
Getopt::Long::Configure("bundling");

my $reuse = '';
my $verbose = 0;
my $skip_chain = 0;
my $help = 0;

GetOptions('reimport|r!' => \$reuse,
           'verbose|v+' => \$verbose,
           'skip-chain|s!' => \$skip_chain,
           'help|h' => \$help);

sub usage {
    print <<"USAGE";

ImportEngine.pl [options] [list of files]

Imports some proprietary image files into an OME database, and runs
the import analysis chain against those images.

Options:
  -r  Reimports images which are already in the database.  This should
      only be used for testing purposes.

  -v  Increase verbosity.  Specifying this option twice generates more
      debugging output than you can shake a stick at.

  -s  Skip import chain.  Imports the files, but does not run the
      import analysis chain.  Most of our image viewers depend on the
      statistical information generated by this chain, so supplying this
      option will probably make the images unviewable.

  -h  Print this help message.

USAGE
    CORE::exit(1);
}

my $manager = OME::SessionManager->new();
my $session = $manager->TTYlogin();
my $factory = $session->Factory();

if ($help || scalar(@ARGV) <= 0) {
    usage();
}

my $repository = $session->findRepository();

my %opts = (session => $session);
$opts{AllowDuplicates} = 1 if $reuse;

my @files;

my $chain = $session->Configuration()->import_chain();

if ($repository->IsLocal()) {
    @files = map { OME::LocalFile->new($_) } @ARGV;
    $chain = $factory->
      findObject('OME::AnalysisChain',
                 name => 'Image import analyses');
} else {
    $OME::Image::Server::SHOW_CALLS = 1 if $verbose > 0;
    $OME::Image::Server::SHOW_READS = 1 if $verbose > 1;
    print "Uploading original files to image server\n";
    foreach my $filename (@ARGV) {
        my $file;
        if ($filename =~ /^\:([0-9]+)$/) {
            $file = OME::Image::Server::File->new($1);
        } else {
            $file = OME::Image::Server::File->upload($filename);
        }
        push @files, $file;
        print "  $filename\n    ",$file->getFileID(),", size ",$file->getLength(),"\n";
    }
}

print "Importing files\n";
my $importer = OME::ImportEngine::ImportEngine->new(%opts);
my ($dataset,$global_mex) = $importer->startImport();
my $image_list = $importer->importFiles(\@files);
$importer->finishImport();


if (!$skip_chain && (scalar(@$image_list) > 0)) {
    if (defined $chain) {
        OME::Analysis::Engine->executeChain($chain,$dataset,{});
    } else {
        print "I cannot figure out which chain to run on import.\n";
    }
}

print "\n\nSuccessfully imported images:\n";

foreach my $image (@$image_list) {
    print $image->id(),": ",$image->name(),"\n";
}
