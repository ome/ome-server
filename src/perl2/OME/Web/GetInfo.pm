# OME/Web/GetInfo.pm

# Copyright (C) 2002 Open Microscopy Environment, MIT
# Author:  Jean-Marie Burel <j.burel@dundee.ac.uk>
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


package OME::Web::GetInfo;

use strict;
use vars qw($VERSION);
$VERSION = '1.0';
use CGI;
use base qw(OME::Web);


sub getPageTitle {
	return "Open Microscopy Environment" ;
}


sub createOMEPage{
  my $self=shift;
  my $cgi=$self->CGI();
  my $body="";  
  my $projectID=$cgi->url_param('ProjectID');
  my $datasetID=$cgi->url_param('DatasetID');
  my $bool=$cgi->url_param('Bool');

  if ( !defined $projectID and !defined $datasetID){
   die "Package needs ProjectID as url parameters. Neither was supplied. This message generated by ".(ref $self)."->createOMEPage().";
	
  }
  if (defined $projectID){

    my $project=$self->Session()->Factory()->loadObject("OME::Project",$projectID);
    die "Could not load Project (ID=$projectID) from database. This message generated by ".(ref $self)."->createOMEPage()."
			unless defined $project;
    $body.=getprojectinfo($project,$cgi);
  }
  if (defined $datasetID){

    my $dataset=$self->Session()->Factory()->loadObject("OME::Dataset",$datasetID);
    die "Could not load Project (ID=$datasetID) from database. This message generated by ".(ref $self)."->createOMEPage()."
			unless defined $dataset;
    $body.=$cgi->h4("Import succesful") if defined $bool;
    $body.=getdatasetinfo($dataset,$cgi);
  }



   
   return('HTML',$body);




}

#--------------------
#PRIVATE METHODS
#-------------------

sub getprojectinfo{
  my ($project,$cgi)=@_;
  my $text="";
  my @datasetsused=$project->datasets();
  $text.=format_popup_dataset();

  $text.=format_project($project,$cgi);
  $text.=format_datasetList(\@datasetsused,$cgi);
  $text.=close_button();
 return $text;

}


sub getdatasetinfo{
 my ($dataset,$cgi)=@_;
 my $text="";
 my @images=$dataset->images();
 $text.=format_popup();
 $text.=format_dataset($dataset,$cgi);
 $text.=format_imageList(\@images,$cgi);
 $text.=close_button();
 return $text;
}

sub format_project{
 my ($project,$cgi)=@_;
 my $summary="";
 $summary .= $cgi->h3('The project is:') ;
 $summary .= "<P><NOBR><B>Name:</B> ".$project->name()."</NOBR><BR>" ;
 $summary .= "<NOBR><B>ID:</B> ".$project->project_id()."</NOBR><BR>" ;
 $summary .= "<B>Description:</B> ".$project->description()."<BR></P>" ;
 return $summary ;

}




sub format_dataset{
  my ($dataset,$cgi)=@_;
  my $summary="";
  $summary .= "<NOBR><B>Name:</B> ".$dataset->name()."</NOBR><BR>" ;
  $summary .= "<NOBR><B>ID:</B> ".$dataset->dataset_id()."</NOBR><BR>" ;
  $summary .= "<B>Description:</B> ".$dataset->description()."<BR>" ;
  $summary .= "<NOBR><B>Locked:</B> ".($dataset->locked()?'YES':'NO')."</NOBR><br>";
  $summary .= "<NOBR><B>Owner:</B> ".$dataset->owner()->firstname()." ".$dataset->owner()->lastname()."</NOBR><BR>";
  $summary .="<NOBR><B>E-mail:</B><a href='mailto:".$dataset->owner()->email()."'>".$dataset->owner()->email()."</a></NOBR><BR>";
  

  return $summary;

}


sub format_datasetList{

 my ($ref,$cgi)=@_;
 my @list=();
 my $text="";
 return "<b>No dataset associated to this project</b>.<br>" if scalar(@$ref)==0;
 $text.=$cgi->h3("List of dataset(s) used:"); 
 foreach (@$ref){
   my $data="";
   my $view=create_button_dataset($_->dataset_id());
   $data.=$view."&nbsp;&nbsp;<b>Name:</b> ".$_->name();
   push(@list,$data);
 }
 $text.="<p>";
 $text.=join("<br>",@list);
 $text.="</p>";
 return $text;

}

sub format_imageList{
  my ($ref,$cgi)=@_;
  my @list=();
  my $text="";
  return "<b>No Image in this dataset.</b>.<br>" if scalar(@$ref)==0;
  $text.=$cgi->h3("List of image(s) in this dataset:"); 
  foreach (@$ref){
    my $summary="";
    
    $summary .= "<NOBR><B>Name:</B> ".$_->name()."</NOBR>&nbsp;&nbsp;" ;
    $summary.=create_button($_->image_id());
    push(@list,$summary);
  }
  $text.="<p>";
  $text.=join("<br>",@list);
  $text.="</p>";
  return $text;



}



sub close_button{
 my $text="";
 $text.=<<END;
	<input type=button
	onclick="window.close()"
	value="Close window">
END
 return $text;
}

#test
sub format_popup{
  my ($text)=@_;
 $text.=<<ENDJS;
<script language="JavaScript">
<!--
var imageid;
function OpenPopUp(id) {
      imageid=id;
	var OMEfile;
	OMEfile='/perl2/serve.pl?Page=OME::Web::GetGraphics&ImageID='+imageid;
	ImageViewer=window.open(
		OMEfile,
		"ImageViewer",
		"toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,height=500");
	ImageViewer.focus();
      return false;
}
-->
</script>
ENDJS

return $text;
}

sub format_popup_dataset{
  my ($text)=@_;
 $text.=<<ENDJS;
<script language="JavaScript">
<!--
var datasetid;
function OpenPopUpDataset(id) {
      datasetid=id;
	var OMEfile;
	OMEfile='/perl2/serve.pl?Page=OME::Web::GetGraphics&DatasetID='+datasetid;
	datasetViewer=window.open(
		OMEfile,
		"datasetViewer",
		"toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=500,height=500");
	datasetViewer.focus();
      return false;
}
-->
</script>
ENDJS

return $text;
}



sub create_button{
 my ($id)=@_;
 my $text="";
 $text.=<<END;
	<input type=button
	onclick="return OpenPopUp($id)"
	value="View"
	name="submit">
END
 return $text;
}

sub create_button_dataset{
 my ($id)=@_;
 my $text="";
 $text.=<<END;
	<input type=button
	onclick="return OpenPopUpDataset($id)"
	value="View"
	name="submit">
END
 return $text;
}




1;
