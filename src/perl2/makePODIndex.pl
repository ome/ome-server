# makePODIndex.pl

#-------------------------------------------------------------------------------
#
# Copyright (C) 2003 Open Microscopy Environment
#       Massachusetts Institute of Technology,
#       National Institutes of Health,
#       University of Dundee
#
#
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#-------------------------------------------------------------------------------




#-------------------------------------------------------------------------------
#
# Written by:    Josiah Johnston <siah@nih.gov>
#
#-------------------------------------------------------------------------------

# This is a developer utility. It generates a POD index of POD documentation rooted at this directory.
# It has dependencies not guaranteec to be supplied by the OME distribution. (POD::Find)

use strict;
use Pod::Find qw(pod_find simplify_name);

my %pods = pod_find( '.');
my %mods;
foreach my $pod (values %pods) {
	unless($pod =~ /^modules/) {	
		my @pckgs = split( /::/, $pod );
		my $hash_path = \%mods;
		foreach( @pckgs ) {
			$hash_path->{$_} = {} if not exists $hash_path->{$_};
			$hash_path = $hash_path->{$_};
		}
	}
}

open( INDEX, "> index.pod" )
	or die "Couldn't open index.pod for writing\n";


print INDEX "=pod\n\n=head1 Index of POD documentation.\n\n";
print_module_hash( \%mods );
print INDEX "Autogenerated on ".localtime()."\n\n";
print INDEX "=cut\n\n";

sub print_module_hash {
my $hash = shift;
my $depth = shift || 0;
my $prefix = shift;
foreach (sort keys %$hash) {

	if( $prefix eq undef ) { 
		print INDEX "=head2 L<$_|$_>\n\n";
		print_module_hash( $hash->{$_}, $depth+1, $_ );
	
	} else {
		print INDEX "=over 4\n\n";		
		print INDEX "=item L<$_|$prefix"."::$_>\n\n";
		print_module_hash( $hash->{$_}, $depth+1, "$prefix"."::$_" );
		print INDEX "=back\n\n";
	}
}
}

close( INDEX );

